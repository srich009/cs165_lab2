possible things to look at/modify

goals:
A modified WinEdt.exe that can be successfully launched either
1. without the "Expired Trial Period" banner at the top (DONE)
or
2. without the pop-up reminding about the "31-day trial period" even when the local time is set to 1 year after the current time

----------------------------------------

OPTION #1 - remove the banner at the top (DONE)

searching for string trial:

sub_76B074
	at the very first part at the top of the control flow graph
	modify the jump not zero "jnz short loc_76B103" to unconditional jump "jmp short loc_76B103" 
	this will hop over the part which puts the banner at the top 
	the jump should skip over the call to sub_40BB48  
	it is called inside of sub_76b074, looks like it is invoked for Expired/Unregistered part
	
Original:

sub_76B074 proc near
var_4= dword ptr -4
push    ebp
...
call    sub_40B160
cmp     byte ptr [ebx+28h], 0
jnz     short loc_76B103

Modified:

sub_76B074 proc near
var_4= dword ptr -4
push    ebp
...
call    sub_40B160
cmp     byte ptr [ebx+28h], 0
jmp     short loc_76B103
	
----------------------------------------

OPTION #2 - remove initial popup

.itext:00858BE8                 public start
.itext:00858BE8 start:                                  ; DATA XREF: HEADER:00400128â†‘o
.itext:00858BE8                 push    ebp
.itext:00858BE9                 mov     ebp, esp
.itext:00858BEB                 add     esp, 0FFFFFFF0h
.itext:00858BEE                 push    ebx
.itext:00858BEF                 mov     eax, offset unk_84E3F0
.itext:00858BF4                 call    sub_40FD24
.itext:00858BF9                 mov     ebx, off_863510
.itext:00858BFF                 call    sub_838F5C
.itext:00858C04                 mov     eax, [ebx]
.itext:00858C06                 call    sub_63DBBC
.itext:00858C0B                 mov     eax, [ebx]
.itext:00858C0D                 mov     edx, offset aWinedt90 ; "WinEdt 9.0"
.itext:00858C12                 call    sub_63D504
.itext:00858C17                 call    sub_406C4C
.itext:00858C1C                 xor     edx, edx
.itext:00858C1E                 mov     eax, offset aInitdata ; "InitData"
.itext:00858C23                 call    sub_838EB8
.itext:00858C28                 mov     eax, [ebx]
.itext:00858C2A                 mov     dl, 1
.itext:00858C2C                 call    sub_63F8F4
.itext:00858C31                 mov     eax, [ebx]
.itext:00858C33                 mov     byte ptr [eax+6Eh], 0
.itext:00858C37                 call    sub_846118
.itext:00858C3C                 test    al, al
.itext:00858C3E                 jz      loc_858F82
.itext:00858C44                 xor     edx, edx
.itext:00858C46                 mov     eax, offset aReaddata ; "ReadData"
.itext:00858C4B                 call    sub_838EB8
.itext:00858C50                 call    sub_84B948
.itext:00858C55                 test    al, al
.itext:00858C57                 jz      loc_858F74
.itext:00858C5D                 xor     edx, edx
.itext:00858C5F                 mov     eax, offset aRegok ; "RegOK"
.itext:00858C64                 call    sub_838EB8
.itext:00858C69                 mov     eax, off_862F24
.itext:00858C6E                 cmp     byte ptr [eax+28h], 0
.itext:00858C72                 jnz     short loc_858CB9
.itext:00858C74                 mov     eax, off_862F24
.itext:00858C79                 cmp     dword ptr [eax+24h], 0
.itext:00858C7D                 jnz     short loc_858C87
.itext:00858C7F                 cmp     dword ptr [eax+20h], 2Ch
.itext:00858C83                 jmp     short loc_858CB9



modify the instuction 00858c83 
jne short loc_858CB9

to

jmp short loc_858CB9

